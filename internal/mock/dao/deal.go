// Code generated by MockGen. DO NOT EDIT.
// Source: internal/dao/deal.go

// Package dao is a generated GoMock package.
package dao

import (
	models "dealer/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	gorm "gorm.io/gorm"
)

// MockDealInterface is a mock of DealInterface interface.
type MockDealInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDealInterfaceMockRecorder
}

// MockDealInterfaceMockRecorder is the mock recorder for MockDealInterface.
type MockDealInterfaceMockRecorder struct {
	mock *MockDealInterface
}

// NewMockDealInterface creates a new mock instance.
func NewMockDealInterface(ctrl *gomock.Controller) *MockDealInterface {
	mock := &MockDealInterface{ctrl: ctrl}
	mock.recorder = &MockDealInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDealInterface) EXPECT() *MockDealInterfaceMockRecorder {
	return m.recorder
}

// Insert mocks base method.
func (m *MockDealInterface) Insert(arg0 context.Context, arg1 *gorm.DB, arg2 []*models.Deal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockDealInterfaceMockRecorder) Insert(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockDealInterface)(nil).Insert), arg0, arg1, arg2)
}

// List mocks base method.
func (m *MockDealInterface) List(arg0 context.Context, arg1 *gorm.DB, arg2 *models.Deal) ([]*models.Deal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.Deal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockDealInterfaceMockRecorder) List(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockDealInterface)(nil).List), arg0, arg1, arg2)
}
